thoughts: brute force with recursion! assume no restraints, then filter out
combos based on feasibility

ex:
.......... 3,2,1      indices of each
###.##.#..
###.##..#.
###.##...#
###..##.#.
###..##..#
###...##.#
.###.##.#.
.###.##..#
.###..##.#
..###.##.#


groups, len -> yields
=====================
&[3, 2, 1], 10
###.??????

    &[2, 1], 6
    ##.???

       &[1], 3
       #.. -> [0]
       .#. -> [0, 1]
       ..# -> [0, 1, 2]

    &[2, 1], 5
    ##.??? -> [0, [0, 1, 2]]     = [[0, 0], [0, 1], [0, 2]]
    .##.??

        &[1], 2
        #. -> [0]
        .# -> [0, 1]

    &[2, 1], 4
    ##.??? -> [0, [0, 1, 2]]     = [[0, 0], [0, 1], [0, 2]]
    .##.?? -> [1, [0, 1]]        = [[1, 0], [1, 1]]
    ..##.?

         &[1], 1
         # -> [0]

    &[2, 1], 3
    ##.??? -> [0, [0, 1, 2]]     = [[0, 0], [0, 1], [0, 2]]
    .##.?? -> [1, [0, 1]]        = [[1, 0], [1, 1]]
    ..##.? -> [2, [0]]           = [[2, 0]]
    ...##.

          &[1], 0 -> []

    &[2, 1], 5
    ##.??? -> [0, [0, 1, 2]]     = [[0, 0], [0, 1], [0, 2]]
    .##.?? -> [1, [0, 1]]        = [[1, 0], [1, 1]]
    ..##.? -> [2, [0]]           = [[2, 0]]
    ...##. -> [3, []]            = []
           => [[0, [0, 1, 2]], [1, [0, 1]], [2, [0]]]
           == [[0, 0], [0, 1], [0, 2], [1, 0], [1, 1], [2, 0]]

&[3, 2, 1], 9
###.?????? -> [0, [[0, [0, 1, 2]], [1, [0, 1]], [2, [0]]]
           == [[0, 0, 0], [0, 0, 1], [0, 0, 2], [0, 1, 0], [0, 1, 1], [0, 2, 0]]
.###.?????

     &[2, 1], 5
     ##.??

        &[1], 2
        #. -> [0]
        .# -> [0, 1]

     &[2, 1], 4
     ##.?? -> [0, [0, 1]]
     .##.? -> [0, [0, 1]]

        &[1], 2
        #. -> [0]
        .# -> [0, 1]

